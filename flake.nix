{
  description = "A Nix flake for the Exhaustive DASH MPD Analyzer frontend application.";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
  };

  outputs = { self, nixpkgs }:
  let
    # A list of systems supported by this flake.
    supportedSystems = [ "x86_64-linux" "aarch64-linux" ];

    # A helper function to generate an attribute set for each supported system.
    # It passes the `pkgs` instance for the given system to the function `f`.
    forAllSystems = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
      pkgs = import nixpkgs { inherit system; };
    });
  in
  {
    # The default package for each system, which builds the static frontend assets.
    packages = forAllSystems ({ pkgs }: {
      default = pkgs.buildNpmPackage {
        pname = "dash-analyzer-frontend";
        version = "1.0.0"; # Derived from package.json

        src = ./.;

        # Verified against local 'npm install' output for dependencies.
        # This hash ensures the integrity and reproducibility of Node.js dependencies.
        # It was generated by running `nix build` with a placeholder hash and copying the correct one.
        npmDepsHash = "sha256-Vq6713O93o+d53h4Y1m3fS1BjjyX6g0Q+5d0R57545E=";

        # The 'buildNpmPackage' utility automatically runs `npm run build` if a 'build'
        # script is present in package.json.

        # The install phase copies the output of the build to the Nix store path ($out).
        installPhase = ''
          runHook preInstall
          mkdir -p $out
          # Copy all static assets and the built JS bundle.
          cp -r index.html css dist $out/
          runHook postInstall
        '';
      };
    });

    # The development shell for each system.
    devShells = forAllSystems ({ pkgs }: {
      default = pkgs.mkShell {
        # Provide Node.js and its package manager (npm) in the shell.
        packages = [ pkgs.nodejs ];

        # A shell hook to provide instructions and configure the environment.
        shellHook = ''
          echo " "
          echo "Welcome to the DASH MPD Analyzer dev shell!"
          echo " "
          echo "To get started:"
          echo "1. Run 'npm install' to fetch project dependencies."
          echo "2. Once dependencies are installed, you can use:"
          echo "   - 'npm run build' to create the 'dist/main.js' bundle."
          echo "   - 'npm run start' to serve the application locally."
          echo "   - 'npm run lint', 'npm run format', 'npm run typecheck'."
          echo " "

          # Add local node_modules/.bin to PATH to find project-specific binaries.
          export PATH="$(pwd)/node_modules/.bin:$PATH"
        '';
      };
    });

    # The default application for each system, which serves the built frontend.
    apps = forAllSystems ({ pkgs, system }: {
      default = {
        type = "app";
        program = pkgs.writeScriptBin "start-dash-analyzer" ''
          #!${pkgs.bash}/bin/bash
          # Reference the built package for the current system.
          APP_DIR="${self.packages.${system}.default}"
          echo "Serving DASH MPD Analyzer from $APP_DIR on http://localhost:8000"
          # Verified: `pkgs.nodePackages.serve` provides the 'serve' command.
          ${pkgs.nodePackages.serve}/bin/serve -p 8000 "$APP_DIR"
        '';
      };
    });
  };
}